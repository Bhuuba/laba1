@model NewMyApp.Core.Models.Group

<div class="container mt-4">
    <div class="group-card">
        <div class="group-cover" style="height: 300px; background-image: url('@(string.IsNullOrEmpty(Model.CoverImage) ? "/images/default-group-cover.jpg" : Model.CoverImage)')">
            <div class="group-cover-gradient"></div>
            <div class="position-absolute bottom-0 start-0 w-100 p-4">
                <div class="d-flex justify-content-between align-items-end">
                    <div>
                        <h1 class="text-white mb-0">@Model.Name</h1>
                        <p class="text-white-50 mb-0">@Model.UserGroups.Count учасників</p>
                    </div>
                    <div>
                        @if (!ViewBag.IsMember)
                        {
                            <button class="btn btn-light join-group" data-group-id="@Model.Id">
                                <i class="bi bi-person-plus-fill"></i> Приєднатися до групи
                            </button>
                        }
                        else if (!ViewBag.IsAdmin)
                        {
                            <div class="d-flex gap-2">
                                <a asp-action="Chat" asp-route-id="@Model.Id" class="btn btn-light">
                                    <i class="bi bi-chat-dots"></i> Чат групи
                                </a>
                                <form asp-action="Leave" method="post" style="display: inline;">
                                    <input type="hidden" name="groupId" value="@Model.Id" />
                                    <button type="submit" class="btn btn-danger" onclick="return confirm('Ви впевнені, що хочете покинути групу?')">
                                        <i class="bi bi-box-arrow-right"></i> Покинути групу
                                    </button>
                                </form>
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>

        <div class="p-4">
            <div class="row">
                <div class="col-md-8">
                    @if (!string.IsNullOrEmpty(Model.Description))
                    {
                        <div class="mb-4">
                            <h5 class="text-primary">Опис групи</h5>
                            <p class="lead">@Model.Description</p>
                        </div>
                    }

                    @if (Model.Posts.Any())
                    {
                        <div class="posts-section">
                            <h5 class="text-primary mb-4">Дописи групи (@Model.Posts.Count)</h5>
                            @foreach (var post in Model.Posts.OrderByDescending(p => p.CreatedAt))
                            {
                                <div class="card shadow-sm border-0 mb-4 post-card">
                                    <div class="card-body">
                                        <div class="d-flex align-items-center mb-3">
                                            <img src="@(string.IsNullOrEmpty(post.User.ProfilePicture) ? "/images/default-avatar.png" : post.User.ProfilePicture)" 
                                                 class="rounded-circle me-3" 
                                                 style="width: 40px; height: 40px; object-fit: cover;" 
                                                 alt="@post.User.UserName">
                                            <div>
                                                <h6 class="mb-0">@post.User.UserName</h6>
                                                <small class="text-muted">@post.CreatedAt.ToString("dd.MM.yyyy HH:mm")</small>
                                            </div>
                                        </div>

                                        <p class="card-text">@post.Content</p>

                                        @if (!string.IsNullOrEmpty(post.ImageUrl))
                                        {
                                            <img src="@post.ImageUrl" class="img-fluid rounded mb-3" alt="Post image">
                                        }

                                        <div class="d-flex justify-content-between align-items-center">
                                            <div class="d-flex gap-3">
                                                <button class="btn btn-link text-decoration-none like-button" data-post-id="@post.Id">
                                                    <i class="@(post.Likes.Any(l => l.UserId == ViewBag.CurrentUserId) ? "bi bi-heart-fill text-danger" : "bi bi-heart")"></i>
                                                    <span class="ms-1">@post.Likes.Count</span>
                                                </button>
                                                <button class="btn btn-link text-decoration-none comment-button" data-post-id="@post.Id">
                                                    <i class="bi bi-chat"></i>
                                                    <span class="ms-1">@post.Comments.Count</span>
                                                </button>
                                            </div>
                                        </div>

                                        <!-- Секция комментариев -->
                                        <div class="comments-section mt-3" style="display: none;" id="comments-@post.Id">
                                            @if (post.Comments != null && post.Comments.Any())
                                            {
                                                foreach (var comment in post.Comments.Take(3))
                                                {
                                                    <div class="comment-item">
                                                        <div class="d-flex gap-2">
                                                            <img src="@(string.IsNullOrEmpty(comment.User?.ProfilePicture) ? "/images/default-avatar.png" : comment.User.ProfilePicture)" 
                                                                 class="rounded-circle" style="width: 32px; height: 32px; object-fit: cover;">
                                                            <div>
                                                                <h6 class="mb-1">@comment.User?.UserName</h6>
                                                                <p class="mb-1">@comment.Content</p>
                                                                <small class="text-muted">@comment.CreatedAt.ToString("dd.MM.yyyy HH:mm")</small>
                                                            </div>
                                                        </div>
                                                    </div>
                                                }
                                            }
                                            
                                            <form class="mt-3 add-comment-form" data-post-id="@post.Id">
                                                <div class="input-group">
                                                    <input type="text" class="form-control" placeholder="Напишіть коментар...">
                                                    <button class="btn btn-primary" type="submit">
                                                        <i class="bi bi-send"></i>
                                                    </button>
                                                </div>
                                            </form>
                                        </div>
                                    </div>
                                </div>
                            }
                        </div>
                    }
                    else if (ViewBag.IsMember)
                    {
                        <div class="text-center py-5">
                            <h5>У цій групі ще немає дописів</h5>
                            <p class="text-muted">Будьте першим, хто створить допис у цій групі</p>
                            <a asp-controller="Posts" asp-action="Create" asp-route-groupId="@Model.Id" class="btn btn-primary">
                                <i class="bi bi-plus-lg"></i> Створити допис
                            </a>
                        </div>
                    }
                </div>

                <div class="col-md-4">
                    <div class="card shadow-sm border-0 mb-4">
                        <div class="card-body">
                            <h5 class="card-title text-primary">Учасники</h5>
                            <div class="members-list">
                                @foreach (var userGroup in Model.UserGroups)
                                {
                                    <div class="d-flex align-items-center mb-3">
                                        <img src="@(string.IsNullOrEmpty(userGroup.User.ProfilePicture) ? "/images/default-avatar.png" : userGroup.User.ProfilePicture)" 
                                             class="rounded-circle me-2" 
                                             style="width: 40px; height: 40px; object-fit: cover;">
                                        <div>
                                            <h6 class="mb-0">@userGroup.User.UserName</h6>
                                            <small class="text-muted">@(userGroup.Role == GroupRole.Admin ? "Адміністратор" : "Учасник")</small>
                                        </div>
                                    </div>
                                }
                            </div>
                        </div>
                    </div>

                    @if (ViewBag.IsMember)
                    {
                        <div class="card shadow-sm border-0">
                            <div class="card-body">
                                <h5 class="card-title text-primary">Створити допис</h5>
                                <form asp-controller="Posts" asp-action="Create" method="post" enctype="multipart/form-data">
                                    <input type="hidden" name="GroupId" value="@Model.Id" />
                                    <div class="mb-3">
                                        <textarea name="Content" class="form-control" rows="3" placeholder="Що у вас нового?"></textarea>
                                    </div>
                                    <div class="mb-3">
                                        <input type="file" name="Image" class="form-control" accept="image/*">
                                    </div>
                                    <button type="submit" class="btn btn-primary w-100">
                                        <i class="bi bi-send"></i> Опублікувати
                                    </button>
                                </form>
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Обработка лайков
            document.querySelectorAll('.like-button').forEach(button => {
                button.addEventListener('click', async function() {
                    const postId = this.dataset.postId;
                    try {
                        const response = await fetch(`/Posts/Like/${postId}`, {
                            method: 'POST',
                            headers: {
                                'Content-Type': 'application/json',
                                'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]').value
                            }
                        });

                        if (response.ok) {
                            const data = await response.json();
                            const icon = this.querySelector('i');
                            const count = this.querySelector('span');
                            
                            icon.className = data.isLiked ? 'bi bi-heart-fill text-danger' : 'bi bi-heart';
                            count.textContent = data.likesCount;
                            
                            // Добавляем анимацию
                            icon.classList.add('animate__animated', 'animate__heartBeat');
                            setTimeout(() => {
                                icon.classList.remove('animate__animated', 'animate__heartBeat');
                            }, 1000);
                        }
                    } catch (error) {
                        console.error('Error:', error);
                        toastr.error('Помилка при обробці лайка');
                    }
                });
            });

            // Обработка отображения комментариев
            document.querySelectorAll('.comment-button').forEach(button => {
                button.addEventListener('click', function() {
                    const postId = this.dataset.postId;
                    const commentsSection = document.querySelector(`#comments-${postId}`);
                    commentsSection.style.display = commentsSection.style.display === 'none' ? 'block' : 'none';
                });
            });

            // Обработка добавления комментариев
            document.querySelectorAll('.add-comment-form').forEach(form => {
                form.addEventListener('submit', async function(e) {
                    e.preventDefault();
                    const postId = this.dataset.postId;
                    const input = this.querySelector('input');
                    const content = input.value.trim();

                    if (content) {
                        try {
                            const response = await fetch('/Comments/Add', {
                                method: 'POST',
                                headers: {
                                    'Content-Type': 'application/json',
                                    'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]').value
                                },
                                body: JSON.stringify({
                                    postId: postId,
                                    content: content
                                })
                            });

                            if (response.ok) {
                                location.reload();
                            } else {
                                toastr.error('Помилка при додаванні коментаря');
                            }
                        } catch (error) {
                            console.error('Error:', error);
                            toastr.error('Помилка при додаванні коментаря');
                        }
                    }
                });
            });

            // Присоединение к группе
            const joinButton = document.querySelector('.join-group');
            if (joinButton) {
                joinButton.addEventListener('click', async function() {
                    const groupId = this.dataset.groupId;
                    try {
                        const response = await fetch('/Groups/Join', {
                            method: 'POST',
                            headers: {
                                'Content-Type': 'application/json',
                                'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]').value
                            },
                            body: JSON.stringify({ groupId })
                        });

                        if (response.ok) {
                            location.reload();
                        } else {
                            const error = await response.text();
                            toastr.error(error || 'Помилка при приєднанні до групи');
                        }
                    } catch (error) {
                        console.error('Error:', error);
                        toastr.error('Помилка при приєднанні до групи');
                    }
                });
            }
        });
    </script>
}