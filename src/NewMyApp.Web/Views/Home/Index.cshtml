@model IEnumerable<NewMyApp.Core.Models.Post>
@using Microsoft.AspNetCore.Identity
@using NewMyApp.Core.Models
@inject SignInManager<User> SignInManager
@inject UserManager<User> UserManager

@{
    ViewData["Title"] = "Головна сторінка";
    var currentUserId = UserManager.GetUserId(User);
}

<div class="container">
    <div class="row mb-4">
        <div class="col">
            <h1>Останні пости</h1>
        </div>
        <div class="col text-end">
            <a asp-controller="Posts" asp-action="Create" class="btn btn-primary">
                <i class="fas fa-plus"></i> Створити новий пост
            </a>
        </div>
    </div>

    @if (!Model.Any())
    {
        <div class="alert alert-info">
            Поки що немає жодного поста. Будьте першим, хто створить пост!
        </div>
    }
    else
    {
        <div class="row">
            @foreach (var post in Model)
            {
                <div class="col-md-12 mb-4">
                    <div class="card">
                        <div class="card-body">
                            <div class="d-flex align-items-center mb-3">
                                <img src="@(post.User?.ProfilePicture ?? "/images/default-avatar.png")" 
                                     class="rounded-circle me-2" 
                                     alt="Profile picture" 
                                     style="width: 40px; height: 40px; object-fit: cover;" />
                                <div>
                                    <h5 class="card-title mb-0">@post.User?.UserName</h5>
                                    <small class="text-muted">@post.CreatedAt.ToString("dd.MM.yyyy HH:mm")</small>
                                </div>
                            </div>

                            <p class="card-text">@post.Content</p>

                            @if (!string.IsNullOrEmpty(post.ImageUrl))
                            {
                                <img src="@post.ImageUrl" class="img-fluid rounded mb-3" alt="Post image" />
                            }

                            <div class="d-flex justify-content-between align-items-center">
                                <div>
                                    @if (SignInManager.IsSignedIn(User))
                                    {
                                        <form asp-controller="Posts" asp-action="Like" method="post" class="d-inline">
                                            @Html.AntiForgeryToken()
                                            <input type="hidden" name="id" value="@post.Id" />
                                            <button type="submit" 
                                                    class="btn btn-outline-primary btn-sm me-2 like-button @(post.Likes.Any(l => l.UserId == currentUserId) ? "liked" : "")"
                                                    data-post-id="@post.Id">
                                                <i class="fas fa-heart"></i> 
                                                <span class="likes-count">@post.Likes.Count</span>
                                            </button>
                                        </form>
                                    }
                                    <a asp-controller="Posts" asp-action="Details" asp-route-id="@post.Id" class="btn btn-outline-secondary btn-sm">
                                        <i class="fas fa-comment"></i> 
                                        <span class="comments-count">@post.Comments.Count</span>
                                    </a>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>
    }
</div>

@section Scripts {
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.1/css/all.min.css" />
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            document.querySelectorAll('.like-button').forEach(button => {
                button.addEventListener('click', function(e) {
                    e.preventDefault();
                    const form = this.closest('form');
                    const postId = this.dataset.postId;
                    const likesCount = this.querySelector('.likes-count');

                    fetch(form.action, {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/x-www-form-urlencoded',
                            'RequestVerificationToken': form.querySelector('input[name="__RequestVerificationToken"]').value
                        },
                        body: new URLSearchParams(new FormData(form))
                    })
                    .then(response => response.json())
                    .then(data => {
                        if (data.success) {
                            likesCount.textContent = data.likesCount;
                            this.classList.toggle('liked');
                        }
                    })
                    .catch(error => console.error('Error:', error));
                });
            });
        });
    </script>
    <style>
        .like-button {
            transition: all 0.3s ease;
        }
        .like-button.liked {
            background-color: #dc3545;
            color: white;
            border-color: #dc3545;
        }
        .like-button:hover {
            background-color: #dc3545;
            color: white;
            border-color: #dc3545;
        }
    </style>
}
