@model NewMyApp.Web.Models.ProfileViewModel

@{
    ViewData["Title"] = $"{Model.FirstName} {Model.LastName}'s Profile";
}

<div class="container mt-4">
    <div class="row">
        <div class="col-md-4">
            <div class="card">
                <div class="card-body text-center">
                    <div class="position-relative mb-3">
                        <img src="@(string.IsNullOrEmpty(Model.ProfilePicture) ? "/images/default-avatar.png" : Model.ProfilePicture)" 
                             class="rounded-circle img-thumbnail" 
                             alt="Profile Picture" 
                             style="width: 200px; height: 200px; object-fit: cover;">
                    </div>
                    <h4 class="mb-0">@Model.FirstName @Model.LastName</h4>
                    @if (!string.IsNullOrEmpty(Model.Bio))
                    {
                        <p class="text-muted">@Model.Bio</p>
                    }
                    <div class="mt-3">
                        <p><strong>Total Views:</strong> @ViewBag.TotalViews</p>
                        <p><strong>Total Posts:</strong> @Model.TotalPosts</p>
                        <p><strong>Total Friends:</strong> @Model.TotalFriends</p>
                    </div>
                    <p class="text-muted">@Model.Email</p>
                    <div class="mt-3">
                        <a asp-controller="Profile" asp-action="Settings" class="btn btn-primary">
                            <i class="bi bi-gear"></i> Settings
                        </a>
                        <a href="/Certificates/Generate" class="btn btn-success">
                            <i class="bi bi-award"></i> Download Certificate
                        </a>
                    </div>
                </div>
            </div>
            
            <div class="card mt-3 collapse" id="editProfileForm">
                <div class="card-header">
                    <h5 class="mb-0">Edit Profile</h5>
                </div>
                <div class="card-body">
                    <form asp-action="Update" method="post" class="needs-validation" novalidate>
                        <div class="mb-3">
                            <label asp-for="FirstName" class="form-label">Ім'я</label>
                            <input asp-for="FirstName" class="form-control" required />
                            <span asp-validation-for="FirstName" class="text-danger"></span>
                        </div>
                        <div class="mb-3">
                            <label asp-for="LastName" class="form-label">Прізвище</label>
                            <input asp-for="LastName" class="form-control" required />
                            <span asp-validation-for="LastName" class="text-danger"></span>
                        </div>
                        <div class="mb-3">
                            <label asp-for="Bio" class="form-label">Про себе</label>
                            <textarea asp-for="Bio" class="form-control" rows="3"></textarea>
                            <span asp-validation-for="Bio" class="text-danger"></span>
                        </div>
                        <div class="mb-3">
                            <label asp-for="DateOfBirth" class="form-label">Дата народження</label>
                            <input asp-for="DateOfBirth" class="form-control" type="date" />
                            <span asp-validation-for="DateOfBirth" class="text-danger"></span>
                        </div>
                        <button type="submit" class="btn btn-primary">
                            <i class="bi bi-save"></i> Зберегти зміни
                        </button>
                    </form>
                </div>
            </div>
        </div>
        
        <div class="col-md-8">
            <div class="card">
                <div class="card-header">
                    <h4>Recent Posts</h4>
                </div>
                <div class="card-body">
                    @await Component.InvokeAsync("UserPosts", new { userId = Model.Id })
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        // Form validation
        (function () {
            'use strict'
            var forms = document.querySelectorAll('.needs-validation')
            Array.prototype.slice.call(forms)
                .forEach(function (form) {
                    form.addEventListener('submit', function (event) {
                        if (!form.checkValidity()) {
                            event.preventDefault()
                            event.stopPropagation()
                        }
                        form.classList.add('was-validated')
                    }, false)
                })
        })()
    </script>
} 