@model IEnumerable<NewMyApp.Core.Models.Post>
@using Microsoft.AspNetCore.Identity
@using NewMyApp.Core.Models
@inject UserManager<User> UserManager

@{
    var currentUserId = UserManager.GetUserId(User);
}

@if (!Model.Any())
{
    <div class="alert alert-info">
        Користувач ще не створив жодного поста.
    </div>
}
else
{
    <div class="posts-container">
        @foreach (var post in Model)
        {
            <div class="post mb-4">
                <div class="card mb-4">
                    <div class="card-header d-flex justify-content-between align-items-center">
                        <div class="d-flex align-items-center">
                            <img src="@(string.IsNullOrEmpty(post.User?.ProfilePicture) ? "/images/default-avatar.png" : post.User.ProfilePicture)" 
                                 class="rounded-circle me-2" 
                                 alt="Profile picture" 
                                 style="width: 40px; height: 40px; object-fit: cover;">
                            <div>
                                <h6 class="mb-0">@post.User?.FirstName @post.User?.LastName</h6>
                                <small class="text-muted">@post.CreatedAt.ToString("dd.MM.yyyy HH:mm")</small>
                            </div>
                        </div>
                        @if (currentUserId == post.UserId)
                        {
                            <div class="dropdown">
                                <button class="btn btn-link text-dark" type="button" data-bs-toggle="dropdown">
                                    <i class="fas fa-ellipsis-v"></i>
                                </button>
                                <ul class="dropdown-menu dropdown-menu-end">
                                    <li>
                                        <form asp-controller="Posts" asp-action="Delete" asp-route-id="@post.Id" method="post" onsubmit="return confirm('Ви впевнені, що хочете видалити цей пост?');">
                                            @Html.AntiForgeryToken()
                                            <button type="submit" class="dropdown-item text-danger">
                                                <i class="fas fa-trash-alt"></i> Видалити
                                            </button>
                                        </form>
                                    </li>
                                </ul>
                            </div>
                        }
                    </div>
                    <div class="card-body">
                        <p class="card-text">@post.Content</p>
                        @if (!string.IsNullOrEmpty(post.ImageUrl))
                        {
                            <img src="@post.ImageUrl" class="img-fluid rounded mb-3" alt="Post image">
                        }
                        
                        <div class="d-flex justify-content-between align-items-center">
                            <div>
                                <button class="like-button @(post.Likes.Any(l => l.UserId == currentUserId) ? "liked" : "")" data-post-id="@post.Id">
                                    <i class="@(post.Likes.Any(l => l.UserId == currentUserId) ? "fas" : "far") fa-heart"></i>
                                    <span class="likes-count">@post.Likes.Count</span>
                                </button>
                                <script>
                                    document.addEventListener('DOMContentLoaded', function() {
                                        document.querySelectorAll('.like-button').forEach(button => {
                                            button.addEventListener('click', function(e) {
                                                e.preventDefault();
                                                const postId = this.dataset.postId;
                                                const likesCount = this.querySelector('.likes-count');
                                                const icon = this.querySelector('i');

                                                fetch(`/Posts/Like/${postId}`, {
                                                    method: 'POST',
                                                    headers: {
                                                        'Content-Type': 'application/json',
                                                        'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]').value
                                                    }
                                                })
                                                .then(response => response.json())
                                                .then(data => {
                                                    if (data.success) {
                                                        likesCount.textContent = data.likesCount;
                                                        icon.classList.toggle('fas', data.isLiked);
                                                        icon.classList.toggle('far', !data.isLiked);
                                                    }
                                                })
                                                .catch(error => console.error('Error:', error));
                                            });
                                        });
                                    });
                                </script>
                                <a asp-controller="Posts" asp-action="Details" asp-route-id="@post.Id" class="btn btn-outline-secondary btn-sm">
                                    <i class="fas fa-comment"></i>
                                    <span class="comments-count">@post.Comments.Count</span>
                                </a>
                            </div>
                            @if (post.Group != null)
                            {
                                <a asp-controller="Groups" asp-action="Details" asp-route-id="@post.Group.Id" class="text-muted">
                                    <i class="fas fa-users"></i> @post.Group.Name
                                </a>
                            }
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>
}

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/notyf@3/notyf.min.js"></script>
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const notyf = new Notyf({
                duration: 3000,
                position: { x: 'right', y: 'top' }
            });

            document.querySelectorAll('.like-button').forEach(button => {
                button.addEventListener('click', function(e) {
                    e.preventDefault();
                    const postId = this.dataset.postId;
                    const likesCount = this.querySelector('.likes-count');
                    const icon = this.querySelector('i');

                    fetch(`/Posts/Like/${postId}`, {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                            'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]').value
                        }
                    })
                    .then(response => response.json())
                    .then(data => {
                        if (data.success) {
                            likesCount.textContent = data.likesCount;
                            this.classList.toggle('liked');
                            icon.classList.toggle('fas');
                            icon.classList.toggle('far');

                            // Add animation class
                            icon.classList.add('animate__heartBeat');
                            setTimeout(() => {
                                icon.classList.remove('animate__heartBeat');
                            }, 1000);
                        } else {
                            notyf.error(data.message || 'Помилка при оновленні лайка');
                        }
                    })
                    .catch(error => {
                        console.error('Error:', error);
                        notyf.error('Помилка при обробці лайка');
                    });
                });
            });
        });
    </script>
}