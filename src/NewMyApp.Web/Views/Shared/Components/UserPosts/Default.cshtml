@model IEnumerable<NewMyApp.Core.Models.Post>
@using Microsoft.AspNetCore.Identity
@using NewMyApp.Core.Models
@inject UserManager<User> UserManager

@{
    var currentUserId = UserManager.GetUserId(User);
}

@if (!Model.Any())
{
    <div class="alert alert-info">
        Користувач ще не створив жодного поста.
    </div>
}
else
{
    foreach (var post in Model)
    {
        <div class="card mb-4">
            <div class="card-header d-flex justify-content-between align-items-center">
                <div class="d-flex align-items-center">
                    <img src="@(string.IsNullOrEmpty(post.User?.ProfilePicture) ? "/images/default-avatar.png" : post.User.ProfilePicture)" 
                         class="rounded-circle me-2" 
                         alt="Profile picture" 
                         style="width: 40px; height: 40px; object-fit: cover;">
                    <div>
                        <h6 class="mb-0">@post.User?.FirstName @post.User?.LastName</h6>
                        <small class="text-muted">@post.CreatedAt.ToString("dd.MM.yyyy HH:mm")</small>
                    </div>
                </div>
                @if (currentUserId == post.UserId)
                {
                    <div class="dropdown">
                        <button class="btn btn-link text-dark" type="button" data-bs-toggle="dropdown">
                            <i class="fas fa-ellipsis-v"></i>
                        </button>
                        <ul class="dropdown-menu dropdown-menu-end">
                            <li>
                                <form asp-controller="Posts" asp-action="Delete" asp-route-id="@post.Id" method="post" onsubmit="return confirm('Ви впевнені, що хочете видалити цей пост?');">
                                    @Html.AntiForgeryToken()
                                    <button type="submit" class="dropdown-item text-danger">
                                        <i class="fas fa-trash-alt"></i> Видалити
                                    </button>
                                </form>
                            </li>
                        </ul>
                    </div>
                }
            </div>
            <div class="card-body">
                <p class="card-text">@post.Content</p>
                @if (!string.IsNullOrEmpty(post.ImageUrl))
                {
                    <img src="@post.ImageUrl" class="img-fluid rounded mb-3" alt="Post image">
                }
                
                <div class="d-flex justify-content-between align-items-center">
                    <div>
                        <form asp-controller="Posts" asp-action="Like" method="post" class="d-inline">
                            @Html.AntiForgeryToken()
                            <input type="hidden" name="id" value="@post.Id" />
                            <button type="submit" 
                                    class="btn btn-outline-primary btn-sm me-2 like-button @(post.Likes.Any(l => l.UserId == currentUserId) ? "liked" : "")"
                                    data-post-id="@post.Id">
                                <i class="fas fa-heart"></i>
                                <span class="likes-count">@post.Likes.Count</span>
                            </button>
                        </form>
                        <a asp-controller="Posts" asp-action="Details" asp-route-id="@post.Id" class="btn btn-outline-secondary btn-sm">
                            <i class="fas fa-comment"></i>
                            <span class="comments-count">@post.Comments.Count</span>
                        </a>
                    </div>
                    @if (post.Group != null)
                    {
                        <a asp-controller="Groups" asp-action="Details" asp-route-id="@post.Group.Id" class="text-muted">
                            <i class="fas fa-users"></i> @post.Group.Name
                        </a>
                    }
                </div>
            </div>
        </div>
    }
}

<script>
    document.addEventListener('DOMContentLoaded', function() {
        document.querySelectorAll('.like-button').forEach(button => {
            button.addEventListener('click', function(e) {
                e.preventDefault();
                const form = this.closest('form');
                const postId = this.dataset.postId;
                const likesCount = this.querySelector('.likes-count');

                fetch(form.action, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/x-www-form-urlencoded',
                        'RequestVerificationToken': form.querySelector('input[name="__RequestVerificationToken"]').value
                    },
                    body: new URLSearchParams(new FormData(form))
                })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        likesCount.textContent = data.likesCount;
                        this.classList.toggle('liked');
                    }
                })
                .catch(error => console.error('Error:', error));
            });
        });
    });
</script>

<style>
    .like-button {
        transition: all 0.3s ease;
    }
    .like-button.liked {
        background-color: #dc3545;
        color: white;
        border-color: #dc3545;
    }
    .like-button:hover {
        background-color: #dc3545;
        color: white;
        border-color: #dc3545;
    }
</style> 