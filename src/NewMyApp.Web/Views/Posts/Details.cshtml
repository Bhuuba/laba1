@using Microsoft.AspNetCore.Identity
@using NewMyApp.Core.Models
@model NewMyApp.Core.Models.Post
@inject SignInManager<User> SignInManager
@inject UserManager<User> UserManager

@{
    ViewData["Title"] = "Деталі поста";
    var currentUserId = UserManager.GetUserId(User);
}

<div id="particles-js"></div>

<div class="container mt-4">
    <div class="card post-details-card animate__animated animate__fadeIn" data-aos="fade-up" data-aos-duration="800">
        <div class="card-body">
            <div class="d-flex align-items-center mb-3">
                <img src="@(string.IsNullOrEmpty(Model.User?.ProfilePicture) ? "/images/default-avatar.png" : Model.User.ProfilePicture)" 
                     class="rounded-circle me-3 post-avatar" 
                     alt="Profile Picture"
                     style="width: 48px; height: 48px; object-fit: cover;">
                <div>
                    <h5 class="mb-0">@Model.User?.FirstName @Model.User?.LastName</h5>
                    <small class="text-muted">@Model.CreatedAt.ToString("dd.MM.yyyy HH:mm")</small>
                </div>
                <div class="ms-auto">
                    <button class="btn btn-sm btn-outline-primary" data-tippy-content="Share this post">
                        <i class="bi bi-share"></i>
                    </button>
                    <button class="btn btn-sm btn-outline-danger" data-tippy-content="Report post">
                        <i class="bi bi-flag"></i>
                    </button>
                </div>
            </div>

            @if (!string.IsNullOrEmpty(Model.ImageUrl))
            {
                <div class="post-image-container mb-3" data-aos="zoom-in" data-aos-duration="800">
                    <img src="@Model.ImageUrl" class="img-fluid rounded post-image" alt="Post Image">
                </div>
            }

            <div class="post-content mb-4" data-aos="fade-up" data-aos-duration="800" data-aos-delay="100">
                <p class="card-text">@Model.Content</p>
            </div>

            @if (Model.PostTags != null && Model.PostTags.Any())
            {
                <div class="post-tags mb-4" data-aos="fade-up" data-aos-duration="800" data-aos-delay="200">
                    @foreach (var postTag in Model.PostTags)
                    {
                        <span class="badge bg-primary me-2">#@postTag.Tag.Name</span>
                    }
                </div>
            }

            <div class="post-actions d-flex justify-content-between align-items-center mb-4">
                <div class="d-flex gap-3">
                    <a href="#comments-section" class="btn btn-outline-secondary">
                        <i class="bi bi-chat"></i> 
                        Коментарі (@Model.Comments.Count)
                    </a>
                </div>
            </div>

            <div id="comments-section" class="comments-section">
                <h5 class="mb-4">Коментарі (@Model.Comments.Count)</h5>
                
                @if (SignInManager.IsSignedIn(User))
                {
                    <div class="comment-form mb-4">
                        <form asp-action="CreateComment" asp-controller="Posts" method="post">
                            @Html.AntiForgeryToken()
                            <input type="hidden" name="PostId" value="@Model.Id" />
                            <div class="input-group">
                                <input type="text" 
                                       name="Content" 
                                       class="form-control" 
                                       placeholder="Напишіть коментар..." 
                                       required>
                                <button type="submit" class="btn btn-primary">
                                    <i class="bi bi-send"></i> Надіслати
                                </button>
                            </div>
                        </form>
                    </div>
                }
                else
                {
                    <div class="alert alert-info mb-4">
                        <i class="bi bi-info-circle"></i>
                        Щоб залишити коментар, будь ласка, <a asp-area="Identity" asp-page="/Account/Login">увійдіть</a> в систему
                    </div>
                }

                <div class="comments-list">
                    @if (Model.Comments != null && Model.Comments.Any())
                    {
                        foreach (var comment in Model.Comments.OrderByDescending(c => c.CreatedAt))
                        {
                            <div class="comment-item mb-3 p-3 bg-light rounded">
                                <div class="d-flex">
                                    <img src="@(string.IsNullOrEmpty(comment.User?.ProfilePicture) ? "/images/default-avatar.png" : comment.User.ProfilePicture)" 
                                         class="rounded-circle me-2" 
                                         alt="Profile Picture"
                                         style="width: 32px; height: 32px; object-fit: cover;">
                                    <div class="flex-grow-1">
                                        <div class="d-flex justify-content-between align-items-center">
                                            <h6 class="mb-0">@comment.User?.FirstName @comment.User?.LastName</h6>
                                            <div>
                                                <small class="text-muted me-2">@comment.CreatedAt.ToString("dd.MM.yyyy HH:mm")</small>
                                                @if (currentUserId == comment.UserId || currentUserId == Model.UserId)
                                                {
                                                    <form asp-action="DeleteComment" asp-controller="Posts" method="post" class="d-inline">
                                                        @Html.AntiForgeryToken()
                                                        <input type="hidden" name="commentId" value="@comment.Id" />
                                                        <input type="hidden" name="postId" value="@Model.Id" />
                                                        <button type="submit" class="btn btn-link text-danger p-0 border-0">
                                                            <i class="bi bi-trash"></i>
                                                        </button>
                                                    </form>
                                                }
                                            </div>
                                        </div>
                                        <p class="mb-0 mt-1">@comment.Content</p>
                                    </div>
                                </div>
                            </div>
                        }
                    }
                    else
                    {
                        <div class="text-center text-muted">
                            <p>Поки що немає коментарів. Будьте першим!</p>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

@section Styles {
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/animate.css/4.1.1/animate.min.css">
    <style>
        .post-details-card {
            background: rgba(255, 255, 255, 0.9);
            backdrop-filter: blur(10px);
            border: none;
            box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);
            transition: transform 0.3s ease;
        }

        .post-details-card:hover {
            transform: translateY(-5px);
        }

        .post-image-container {
            position: relative;
            overflow: hidden;
            border-radius: 8px;
        }

        .post-image {
            transition: transform 0.3s ease;
        }

        .post-image:hover {
            transform: scale(1.02);
        }

        .comment-item {
            transition: all 0.3s ease;
            border: 1px solid rgba(0, 0, 0, 0.1);
        }

        .comment-item:hover {
            transform: translateX(5px);
            border-color: rgba(0, 0, 0, 0.2);
        }

        #particles-js {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            z-index: -1;
        }
    </style>
}

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/particles.js@2.0.0/particles.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/notyf@3/notyf.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/2.11.8/umd/popper.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/tippy.js@6/dist/tippy-bundle.umd.min.js"></script>
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Initialize Notyf
            const notyf = new Notyf({
                duration: 3000,
                position: { x: 'right', y: 'top' }
            });

            // Handle like button clicks
            document.querySelectorAll('.like-button').forEach(button => {
                button.addEventListener('click', function(e) {
                    e.preventDefault();
                    const form = this.closest('form');
                    const likesCount = this.querySelector('.likes-count');
                    const icon = this.querySelector('i');

                    fetch(form.action, {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/x-www-form-urlencoded',
                            'RequestVerificationToken': form.querySelector('input[name="__RequestVerificationToken"]').value
                        },
                        body: new URLSearchParams(new FormData(form))
                    })
                    .then(response => response.json())
                    .then(data => {
                        if (data.success) {
                            likesCount.textContent = data.likesCount;
                            this.classList.toggle('liked');
                            icon.classList.toggle('fas');
                            icon.classList.toggle('far');
                            
                            // Add animation class
                            icon.classList.add('animate__heartBeat');
                            setTimeout(() => {
                                icon.classList.remove('animate__heartBeat');
                            }, 1000);
                        }
                    })
                    .catch(error => {
                        console.error('Error:', error);
                        notyf.error('Помилка при обробці лайка');
                    });
                });
            });

            // Плавна прокрутка до коментарів
            document.querySelector('a[href="#comments-section"]')?.addEventListener('click', function(e) {
                e.preventDefault();
                document.querySelector('#comments-section').scrollIntoView({ 
                    behavior: 'smooth',
                    block: 'start'
                });
                document.querySelector('input[name="Content"]')?.focus();
            });

            // Відправка форми коментаря по Enter
            document.querySelector('input[name="Content"]')?.addEventListener('keypress', function(e) {
                if (e.key === 'Enter' && !e.shiftKey) {
                    e.preventDefault();
                    this.form.submit();
                }
            });

            tippy('[data-tippy-content]');
        });
    </script>
} 